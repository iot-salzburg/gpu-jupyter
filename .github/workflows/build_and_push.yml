name: Build and push image

on:
  pull_request:
    branches:
      - v0.2
    paths:
      - '.github/workflows/build_and_push.yml'
      - 'src/*'
  push:
    branches:
      - v0.2
    tags:
      - '*'
    paths:
      - '.github/workflows/build_and_push.yml'
      - 'src/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Quay
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Build and push the CUDA Image
      - name: Docker meta (CUDA)
        id: docker_meta_cuda
        uses: docker/metadata-action@v3
        with:
          images: quay.io/basisai/jupyter-helm
          tags: |
            type=ref,event=branch,prefix=gpu-slim-branch-
            type=ref,event=tag,prefix=gpu-slim-
            type=ref,event=pr,prefix=gpu-slim-pr-
          flavor: |
            latest=false
      - name: Generate Dockerfile (CUDA)
        run: ./generate-Dockerfile.sh --slim
      - name: Build and push (CUDA)
        uses: docker/build-push-action@v2
        with:
          context: .build
          file: ./.build/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_cuda.outputs.tags }}
          labels: ${{ steps.docker_meta_cuda.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      # Build and push the Deep Learning Image
      - name: Docker meta (Deep Learning)
        id: docker_meta_deep_learning
        uses: docker/metadata-action@v3
        with:
          images: quay.io/basisai/jupyter-helm
          tags: |
            type=ref,event=branch,prefix=gpu-jupyter-branch-
            type=ref,event=tag,prefix=gpu-jupyter-
            type=ref,event=pr,prefix=gpu-jupyter-pr-
          flavor: |
            latest=false
      - name: Generate Dockerfile (Deep Learning)
        run: ./generate-Dockerfile.sh
      - name: Build and push (Deep Learning)
        uses: docker/build-push-action@v2
        with:
          context: .build
          file: ./.build/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_deep_learning.outputs.tags }}
          labels: ${{ steps.docker_meta_deep_learning.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
